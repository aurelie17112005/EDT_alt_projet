{"version":3,"file":"assets/js/882.33ff3aeb.js","mappings":"yMAAmP,W,IAAgC,OAAG,EAAG,EAAC,MAAQ,G,OAAM,EAAC,wF,GAAC,CAAkB,mCAAG,aAAC,qBAAyB,OAAE,MAAMA,CAChW,iBAGD,I,uECJIC,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACG,IAAI,QAAQC,MAAM,CAAC,MAAQ,OAAO,SAAW,GAAG,YAAc,MAAMJ,EAAG,SAAS,CAACG,IAAI,SAASE,YAAY,CAAC,QAAU,WACzO,EACIC,EAAkB,GCMtB,G,gBAAA,CACAC,KAAA,gBACAC,MAAA,8BACAC,KAAAA,KAAA,CACAC,QAAA,OAEAC,OAAAA,GACA,KAAAC,aACA,EACAC,aAAAA,GACA,KAAAC,aACA,EACAC,QAAA,CACA,iBAAAH,GACA,IACA,MAAAI,QAAAC,UAAAC,aAAAC,aAAA,CAAAC,MAAA,CAAAC,WAAA,iBACA,KAAAC,MAAAF,MAAAG,UAAAP,EACA,KAAAN,QAAAc,YAAA,KAAAC,WAAA,IACA,OAAAC,GACA,KAAAC,MAAA,aAAAD,EACA,CACA,EACAD,UAAAA,GACA,MAAAL,EAAA,KAAAE,MAAAF,MACAQ,EAAA,KAAAN,MAAAM,OACAC,EAAAD,EAAAE,WAAA,MAEAF,EAAAG,MAAAX,EAAAY,WACAJ,EAAAK,OAAAb,EAAAc,YACAL,EAAAM,UAAAf,EAAA,IAAAQ,EAAAG,MAAAH,EAAAK,QAEA,IACA,MAAAG,EAAA,KAAAC,mBAAAT,GACAQ,IACA,KAAAT,MAAA,eAAAS,GACA,KAAAtB,cAEA,OAAAY,GACA,KAAAC,MAAA,aAAAD,EACA,CACA,EACAZ,WAAAA,GACA,KAAAJ,UACA4B,cAAA,KAAA5B,SACA,KAAAA,QAAA,MAEA,KAAAY,MAAAF,MAAAG,WACA,KAAAD,MAAAF,MAAAG,UAAAgB,YAAAC,QAAAC,GAAAA,EAAAC,OAEA,KCzDqQ,I,UCOjQC,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAeA,E,QCGf,GACApC,KAAA,WACAqC,WAAA,CAAAC,cAAAA,GACApC,KAAAA,KAAA,CACAqC,YAAA,IAEA/B,QAAA,CACAgC,YAAAA,GACA,KAAAD,YAAA,CACA,EACA,uBAAAE,CAAAZ,GACA,UACA,KAAAa,KAAAC,KAAA,oBACAC,MAAAf,EACAgB,UAAA,KAAAC,OAAAC,QAAA,oBAAAC,KAEA,KAAAF,OAAAG,SAAA,gBACAC,QAAA,wBACAC,MAAA,WAEA,OAAAhC,GACA,KAAAiC,gBAAAjC,EACA,SACA,KAAAoB,YAAA,CACA,CACA,EACAa,eAAAA,CAAAjC,GACA,KAAA2B,OAAAG,SAAA,gBACAC,QAAA/B,EAAAkC,UAAAnD,MAAAgD,SAAA,iBACAC,MAAA,SAEA,ICpDgQ,ICO5P,GAAY,OACd,EACA7D,EACAS,GACA,EACA,KACA,KACA,MAIF,EAAe,E","sources":["webpack://frontend/./src/views/student/ScanView.vue","webpack://frontend/./src/components/student/QrCodeScanner.vue","webpack://frontend/src/components/student/QrCodeScanner.vue","webpack://frontend/./src/components/student/QrCodeScanner.vue?1479","webpack://frontend/./src/components/student/QrCodeScanner.vue?2a5a","webpack://frontend/src/views/student/ScanView.vue","webpack://frontend/./src/views/student/ScanView.vue?b9f9","webpack://frontend/./src/views/student/ScanView.vue?f41f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',[_c('v-card',[_c('v-card-title',[_vm._v(\"Scanner QR Code\")]),_c('v-card-text',[(_vm.isScanning)?_c('qr-code-scanner',{on:{\"scan-success\":_vm.handleScanSuccess,\"scan-error\":_vm.handleScanError}}):_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.startScanner}},[_vm._v(\" Démarrer le scan \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"qr-scanner\"},[_c('video',{ref:\"video\",attrs:{\"width\":\"100%\",\"autoplay\":\"\",\"playsinline\":\"\"}}),_c('canvas',{ref:\"canvas\",staticStyle:{\"display\":\"none\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"qr-scanner\">\r\n    <video ref=\"video\" width=\"100%\" autoplay playsinline></video>\r\n    <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'QrCodeScanner',\r\n  emits: ['scan-success', 'scan-error'],\r\n  data: () => ({\r\n    scanner: null\r\n  }),\r\n  mounted() {\r\n    this.initScanner()\r\n  },\r\n  beforeUnmount() {\r\n    this.stopScanner()\r\n  },\r\n  methods: {\r\n    async initScanner() {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })\r\n        this.$refs.video.srcObject = stream\r\n        this.scanner = setInterval(this.scanQrCode, 500)\r\n      } catch (error) {\r\n        this.$emit('scan-error', error)\r\n      }\r\n    },\r\n    scanQrCode() {\r\n      const video = this.$refs.video\r\n      const canvas = this.$refs.canvas\r\n      const context = canvas.getContext('2d')\r\n\r\n      canvas.width = video.videoWidth\r\n      canvas.height = video.videoHeight\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height)\r\n\r\n      try {\r\n        const qrData = this.decodeQrFromCanvas(canvas)\r\n        if (qrData) {\r\n          this.$emit('scan-success', qrData)\r\n          this.stopScanner()\r\n        }\r\n      } catch (error) {\r\n        this.$emit('scan-error', error)\r\n      }\r\n    },\r\n    stopScanner() {\r\n      if (this.scanner) {\r\n        clearInterval(this.scanner)\r\n        this.scanner = null\r\n      }\r\n      if (this.$refs.video.srcObject) {\r\n        this.$refs.video.srcObject.getTracks().forEach(track => track.stop())\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QrCodeScanner.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QrCodeScanner.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./QrCodeScanner.vue?vue&type=template&id=2952094b\"\nimport script from \"./QrCodeScanner.vue?vue&type=script&lang=js\"\nexport * from \"./QrCodeScanner.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <v-container>\r\n    <v-card>\r\n      <v-card-title>Scanner QR Code</v-card-title>\r\n      <v-card-text>\r\n        <qr-code-scanner\r\n          v-if=\"isScanning\"\r\n          @scan-success=\"handleScanSuccess\"\r\n          @scan-error=\"handleScanError\"\r\n        />\r\n        <v-btn v-else @click=\"startScanner\" color=\"primary\">\r\n          Démarrer le scan\r\n        </v-btn>\r\n      </v-card-text>\r\n    </v-card>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport QrCodeScanner from '@/components/student/QrCodeScanner'\r\n\r\nexport default {\r\n  name: 'ScanView',\r\n  components: { QrCodeScanner },\r\n  data: () => ({\r\n    isScanning: false\r\n  }),\r\n  methods: {\r\n    startScanner() {\r\n      this.isScanning = true\r\n    },\r\n    async handleScanSuccess(qrData) {\r\n      try {\r\n        await this.$api.post('/attendance/scan', {\r\n          token: qrData,\r\n          studentId: this.$store.getters['auth/currentUser'].id\r\n        })\r\n        this.$store.dispatch('showSnackbar', {\r\n          message: 'Présence enregistrée!',\r\n          color: 'success'\r\n        })\r\n      } catch (error) {\r\n        this.handleScanError(error)\r\n      } finally {\r\n        this.isScanning = false\r\n      }\r\n    },\r\n    handleScanError(error) {\r\n      this.$store.dispatch('showSnackbar', {\r\n        message: error.response?.data?.message || 'Erreur de scan',\r\n        color: 'error'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScanView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScanView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ScanView.vue?vue&type=template&id=7690207c\"\nimport script from \"./ScanView.vue?vue&type=script&lang=js\"\nexport * from \"./ScanView.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["_v","render","_vm","this","_c","_self","staticClass","ref","attrs","staticStyle","staticRenderFns","name","emits","data","scanner","mounted","initScanner","beforeUnmount","stopScanner","methods","stream","navigator","mediaDevices","getUserMedia","video","facingMode","$refs","srcObject","setInterval","scanQrCode","error","$emit","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","qrData","decodeQrFromCanvas","clearInterval","getTracks","forEach","track","stop","component","components","QrCodeScanner","isScanning","startScanner","handleScanSuccess","$api","post","token","studentId","$store","getters","id","dispatch","message","color","handleScanError","response"],"sourceRoot":""}